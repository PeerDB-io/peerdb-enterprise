# this can be further extended to have different secret stores for different existingSecrets
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: {{ .Values.catalog.credentials.ssl.existingSecret }}-ext
  annotations:
    {{- if or .Values.catalog.schema.setup.hook.enabled .Values.catalog.schema.update.hook.enabled }}
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-2"
    {{- if not .Values.catalog.schema.setup.debug }}
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
    {{- end }}
    {{- end }}
spec:
  refreshInterval: {{ .Values.secretsStore.refreshInterval }}
  secretStoreRef:
    name: {{ .Values.secretsStore.name }}
    kind: {{ .Values.secretsStore.kind }}
  target:
    name: {{ .Values.catalog.credentials.ssl.existingSecret }}
    template:
      engineVersion: v2
      data:
        certificate: '{{`{{ .SSL_CERTIFICATE }}`}}'
  data:
    - secretKey: SSL_CERTIFICATE
      remoteRef:
        key: {{ .Values.secretsStore.keyPrefix }}/{{ .Values.catalog.credentials.ssl.existingSecret }}
        property: certificate
